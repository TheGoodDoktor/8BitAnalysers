# vendor includes
set( vendor_dir ../Vendor )
include_directories( ${vendor_dir} )
include_directories( ${vendor_dir}/sokol )
include_directories( ${vendor_dir}/imgui )
include_directories( ${vendor_dir}/chips )
include_directories( ${vendor_dir}/luasrc )
include_directories( ${vendor_dir}/magic_enum/include )
include_directories( ${vendor_dir}/zlib )
include_directories( ${vendor_dir}/implot )
include_directories( ${vendor_dir}/json/single_include/nlohmann )
include_directories( ${vendor_dir}/optick )

# vendor source

# chips
file ( GLOB_RECURSE chips_src 
	${vendor_dir}/chips/*.h)

# imgui
set ( imgui_src_dir ${vendor_dir}/imgui )

set ( imgui_src ${imgui_src_dir}/imgui.cpp 
	${imgui_src_dir}/imgui_demo.cpp 
	${imgui_src_dir}/imgui_draw.cpp 
	${imgui_src_dir}/misc/cpp/imgui_stdlib.cpp 
	${imgui_src_dir}/imgui_tables.cpp
	${imgui_src_dir}/imgui_widgets.cpp )
	
if(${gfxapi} STREQUAL "GLFWApi")
	set( imgui_backend_src ${imgui_src_dir}/backends/imgui_impl_glfw.cpp
	${imgui_src_dir}/backends/imgui_impl_opengl3.cpp )

	find_package(OpenGL REQUIRED)
	include_directories( ${OPENGL_INCLUDE_DIRS} )
	
	set( GLFW_BUILD_DOCS OFF CACHE BOOL  "GLFW lib only" )
	set( GLFW_INSTALL OFF CACHE BOOL  "GLFW lib only" )
	set( GLFW_BUILD_WAYLAND OFF )

	add_subdirectory( ${vendor_dir}/glfw ./glfw )

elseif(${gfxapi} STREQUAL "DX11")
	set( imgui_backend_src ${imgui_src_dir}/backends/imgui_impl_win32.cpp
	${imgui_src_dir}/backends/imgui_impl_dx11.cpp )
endif()

# implot
set ( implot_src ${vendor_dir}/implot/implot.h
	${vendor_dir}/implot/implot.cpp
	${vendor_dir}/implot/implot_demo.cpp
	${vendor_dir}/implot/implot_items.cpp
	${vendor_dir}/implot/implot_internal.h)

# zlib
set ( zlib_src ${vendor_dir}/zlib/adler32.c
	${vendor_dir}/zlib/compress.c
	${vendor_dir}/zlib/crc32.c
	${vendor_dir}/zlib/deflate.c
	${vendor_dir}/zlib/infback.c
	${vendor_dir}/zlib/inffast.c
	${vendor_dir}/zlib/inflate.c
	${vendor_dir}/zlib/inftrees.c
	${vendor_dir}/zlib/trees.c
	${vendor_dir}/zlib/uncompr.c
	${vendor_dir}/zlib/zutil.c )

# lua
set(BUILD_SHARED_LIBS OFF)
set( lua_src ${vendor_dir}/luasrc/lapi.c 
		${vendor_dir}/luasrc/lauxlib.c 
		${vendor_dir}/luasrc/lbaselib.c 
		${vendor_dir}/luasrc/lcode.c 
		${vendor_dir}/luasrc/lcorolib.c 
		${vendor_dir}/luasrc/lctype.c 
		${vendor_dir}/luasrc/ldblib.c 
		${vendor_dir}/luasrc/ldebug.c 
		${vendor_dir}/luasrc/ldo.c
		${vendor_dir}/luasrc/ldump.c 
		${vendor_dir}/luasrc/lfunc.c 
		${vendor_dir}/luasrc/lgc.c 
		${vendor_dir}/luasrc/linit.c 
		${vendor_dir}/luasrc/liolib.c 
		${vendor_dir}/luasrc/llex.c 
		${vendor_dir}/luasrc/lmathlib.c 
		${vendor_dir}/luasrc/lmem.c 
		${vendor_dir}/luasrc/loadlib.c 
		${vendor_dir}/luasrc/lobject.c 
		${vendor_dir}/luasrc/lopcodes.c
		${vendor_dir}/luasrc/loslib.c 
		${vendor_dir}/luasrc/lparser.c 
		${vendor_dir}/luasrc/lstate.c 
		${vendor_dir}/luasrc/lstring.c 
		${vendor_dir}/luasrc/lstrlib.c 
		${vendor_dir}/luasrc/ltable.c 
		${vendor_dir}/luasrc/ltablib.c 
		${vendor_dir}/luasrc/ltests.c 
		${vendor_dir}/luasrc/ltm.c 
		${vendor_dir}/luasrc/lundump.c
		${vendor_dir}/luasrc/lutf8lib.c 
		${vendor_dir}/luasrc/lvm.c 
		${vendor_dir}/luasrc/lzio.c)

 
# imgui lua bindings
set ( imguiextras 
		${vendor_dir}/imgui_lua_bindings/imgui_lua_bindings.cpp 
		${vendor_dir}/ImGuiColorTextEdit/TextEditor.cpp 
		${vendor_dir}/ImGuiColorTextEdit/TextEditor.h )

# optick
set ( optick_src ${vendor_dir}/optick/optick.config.h
	${vendor_dir}/optick/optick.h
	${vendor_dir}/optick/optick_capi.cpp
	${vendor_dir}/optick/optick_capi.h
	${vendor_dir}/optick/optick_common.h
	${vendor_dir}/optick/optick_core.cpp
	${vendor_dir}/optick/optick_core.freebsd.h
	${vendor_dir}/optick/optick_core.h
	${vendor_dir}/optick/optick_core.linux.h
	${vendor_dir}/optick/optick_core.macos.h
	${vendor_dir}/optick/optick_core.platform.h
	${vendor_dir}/optick/optick_core.win.h
	${vendor_dir}/optick/optick_gpu.cpp
	${vendor_dir}/optick/optick_gpu.h
	${vendor_dir}/optick/optick_memory.h
	${vendor_dir}/optick/optick_message.cpp
	${vendor_dir}/optick/optick_message.h
	${vendor_dir}/optick/optick_miniz.cpp
	${vendor_dir}/optick/optick_miniz.h
	${vendor_dir}/optick/optick_serialization.cpp
	${vendor_dir}/optick/optick_serialization.h
	${vendor_dir}/optick/optick_server.cpp
	${vendor_dir}/optick/optick_server.h)

set ( vendor_src 
	${imgui_src} 
	${imgui_backend_src} 
	${implot_src} 
	${chips_src} 
	${rzxlib_src} 
	${zlib_src} 
	${lua_src}
	${imguiextras} 
	${optick_src}
	${vendor_dir}/CMakeVendor.txt)
